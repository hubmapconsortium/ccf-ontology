# ----------------------------------------
# ASCT+B built-in functions
# ----------------------------------------
# IMPORTANT: DO NOT EDIT THIS FILE.

define download_ccf_partonomy_component
	if [ $(COMP) = true ]; then \
		wget -nc -nv -q https://raw.githubusercontent.com/hubmapconsortium/ccf-validation-tools/master/owl/ccf_$(1)_classes.owl -O $@.tmp.owl && \
		$(ROBOT) annotate -i $@.tmp.owl --ontology-iri $(ONTBASE)/$@ $(ANNOTATE_ONTOLOGY_VERSION) --output $@.tmp.owl && mv $@.tmp.owl $@; \
	fi
endef

.PHONY: check_asctb2ccf
check_asctb2ccf:
	@type asctb2ccf > /dev/null 2>&1 || (echo "ERROR: asctb2ccf is required, please visit https://github.com/hubmapconsortium/asctb2ccf to install"; exit 1)

define generate_ccf_asctb_annotations_component
	if [ $(COMP) = true ]; then asctb2ccf --gsheet-url $(1) --ontology-iri $(ONTBASE)/$@ -o $@.tmp.owl && \
		$(ROBOT) annotate --input $@.tmp.owl --ontology-iri $(ONTBASE)/$@ $(ANNOTATE_ONTOLOGY_VERSION) --output $@.tmp.owl && mv $@.tmp.owl $@; fi
endef

define generate_ccf_cell_biomarkers_component
	if [ $(COMP) = true ]; then asctb2ccf --gsheet-url $(1) --cell-biomarkers-only --ontology-iri $(ONTBASE)/$@ -o $@.tmp.owl && \
		$(ROBOT) annotate --input $@.tmp.owl --ontology-iri $(ONTBASE)/$@ $(ANNOTATE_ONTOLOGY_VERSION) --output $@.tmp.owl && mv $@.tmp.owl $@; fi
endef

INTERMEDIATES_OPT = minimal

define extract_uberon_terms
	if [ $(EXT) = true ]; then $(ROBOT) query --input $(1) \
				--query queries/get_uberon_entities.sparql /tmp/entity_set_1.csv && \
		sed -i '1d' /tmp/entity_set_1.csv && \
		$(ROBOT) query --input $(2) \
				--query queries/get_uberon_entities.sparql /tmp/entity_set_2.csv && \
		sed -i '1d' /tmp/entity_set_2.csv && \
		$(ROBOT) query --input $(3) \
				--query queries/get_uberon_entities.sparql /tmp/entity_set_3.csv && \
		sed -i '1d' /tmp/entity_set_3.csv && \
		$(ROBOT) extract --method MIREOT \
				--input $(4) \
				--upper-term "http://purl.obolibrary.org/obo/UBERON_0001062" \
				--lower-terms /tmp/entity_set_1.csv \
				--lower-terms /tmp/entity_set_2.csv \
				--lower-terms /tmp/entity_set_3.csv \
				--intermediates $(INTERMEDIATES_OPT) \
			annotate --ontology-iri $(ONTBASE)/$@ $(ANNOTATE_ONTOLOGY_VERSION) \
				--output $@.tmp.owl && \
		mv $@.tmp.owl $@ && \
		rm /tmp/entity_set_*.csv; fi
endef

define extract_fma_terms
	if [ $(EXT) = true ]; then $(ROBOT) query --input $(1) \
				--query queries/get_fma_entities.sparql /tmp/entity_set_1.csv && \
		sed -i '1d' /tmp/entity_set_1.csv && \
		$(ROBOT) query --input $(2) \
				--query queries/get_fma_entities.sparql /tmp/entity_set_2.csv && \
		sed -i '1d' /tmp/entity_set_2.csv && \
		$(ROBOT) query --input $(3) \
				--query queries/get_fma_entities.sparql /tmp/entity_set_3.csv && \
		sed -i '1d' /tmp/entity_set_3.csv && \
		$(ROBOT) extract --method MIREOT \
				--input $(4) \
				--upper-term "http://purl.org/sig/ont/fma/fma62955" \
				--lower-terms /tmp/entity_set_1.csv \
				--lower-terms /tmp/entity_set_2.csv \
				--lower-terms /tmp/entity_set_3.csv \
				--intermediates $(INTERMEDIATES_OPT) \
			annotate --ontology-iri $(ONTBASE)/$@ $(ANNOTATE_ONTOLOGY_VERSION) \
				--output $@.tmp.owl && \
		mv $@.tmp.owl $@ && \
		rm /tmp/entity_set_*.csv; fi
endef

define extract_cl_terms
	if [ $(EXT) = true ]; then $(ROBOT) query --input $(1) \
				--query queries/get_cl_entities.sparql /tmp/entity_set_1.csv && \
		sed -i '1d' /tmp/entity_set_1.csv && \
		$(ROBOT) query --input $(2) \
				--query queries/get_cl_entities.sparql /tmp/entity_set_2.csv && \
		sed -i '1d' /tmp/entity_set_2.csv && \
		$(ROBOT) query --input $(3) \
				--query queries/get_cl_entities.sparql /tmp/entity_set_3.csv && \
		sed -i '1d' /tmp/entity_set_3.csv && \
		$(ROBOT) extract --method MIREOT \
				--input $(4) \
				--upper-term "http://purl.obolibrary.org/obo/CL_0000000" \
				--lower-terms /tmp/entity_set_1.csv \
				--lower-terms /tmp/entity_set_2.csv \
				--lower-terms /tmp/entity_set_3.csv \
				--intermediates $(INTERMEDIATES_OPT) \
			annotate --ontology-iri $(ONTBASE)/$@ $(ANNOTATE_ONTOLOGY_VERSION) \
				--output $@.tmp.owl && \
		mv $@.tmp.owl $@ && \
		rm /tmp/entity_set_*.csv; fi
endef

define extract_hgnc_terms
	if [ $(EXT) = true ]; then $(ROBOT) query --input $(1) \
				--query queries/get_hgnc_entities.sparql /tmp/entity_set_1.csv && \
		sed -i '1d' /tmp/entity_set_1.csv && \
		$(ROBOT) query --input $(2) \
				--query queries/get_hgnc_entities.sparql /tmp/entity_set_2.csv && \
		sed -i '1d' /tmp/entity_set_2.csv && \
		$(ROBOT) query --input $(3) \
				--query queries/get_hgnc_entities.sparql /tmp/entity_set_3.csv && \
		sed -i '1d' /tmp/entity_set_3.csv && \
		$(ROBOT) extract --method MIREOT \
				--input $(4) \
				--upper-term "http://purl.bioontology.org/ontology/HGNC/gene" \
				--lower-terms /tmp/entity_set_1.csv \
				--lower-terms /tmp/entity_set_2.csv \
				--lower-terms /tmp/entity_set_3.csv \
				--intermediates $(INTERMEDIATES_OPT) \
			annotate --ontology-iri $(ONTBASE)/$@ $(ANNOTATE_ONTOLOGY_VERSION) \
				--output $@.tmp.owl && \
		mv $@.tmp.owl $@ && \
		rm /tmp/entity_set_*.csv; fi
endef

define make_asctb_component
	if [ $(COMP) = true ]; then $(ROBOT) merge --input $(1) --input $(2) --input $(3) \
			--output $@.tmp.owl; fi
	if [ $(COMP) = true ] && [ $(5) ]; then $(ROBOT) merge --input $@.tmp.owl --input $(5) \
			--output $@.tmp.owl; fi
	if [ $(COMP) = true ] && [ $(6) ]; then $(ROBOT) merge --input $@.tmp.owl --input $(6) \
			--output $@.tmp.owl; fi
	if [ $(COMP) = true ] && [ $(7) ]; then $(ROBOT) merge --input $@.tmp.owl --input $(7) \
			--output $@.tmp.owl; fi
	if [ $(COMP) = true ] && [ $(8) ]; then $(ROBOT) merge --input $@.tmp.owl --input $(8) \
			--output $@.tmp.owl; fi
	if [ $(COMP) = true ] && [ $(9) ]; then $(ROBOT) merge --input $@.tmp.owl --input $(9) \
			--output $@.tmp.owl; fi
	if [ $(COMP) = true ]; then $(ROBOT) annotate --input $@.tmp.owl \
			--ontology-iri $(ONTBASE)/$@ $(ANNOTATE_ONTOLOGY_VERSION) --annotation-file $(4) --output $@.tmp.owl && \
			mv -f $@.tmp.owl $@; fi
endef
